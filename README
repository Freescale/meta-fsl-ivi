meta-fsl-ivi, Freescale In-Vehicle Infotainment
=====================================================

This layer's purpose is to add specific Freescale support
for In-Vehicle Infotainment based on GENIVI meta-ivi layer

A distro configuration fsl-ivi-vfb: allows a user to enable
Freescale MXGAL graphics backend for the Genivi LayerManager.

The MXGAL graphics backend for the Genivi LayerManager enables the
composition tasks of LayerManager to be accellerated using the 2D
raster GPU present on the Freescale i.MX6 processors.

Layer dependencies
=====================================================

URI: git://git.yoctoproject.org/poky
branch: dora
revision: faf8f8660fae26a14578738b642fdeb08bcb9d54

URI: git://git.yoctoproject.org/meta-fsl-arm
branch: dora
revision: 520339d3266bfd07bb2e593f70489efe4d98baa2

URI: git://git.openembedded.org/meta-ivi
branch: 5.0
revision: 85bb8821f5db024a67270b5e32220ca9efb48ff9

Build Genivi 5.0 p1 with MXGAL LayerManager backend
=====================================================

1. Source oe-init-build-env

	source oe-init-build-env

2. Add meta-fsl-ivi layer dependency paths to COREBASE/build/conf/bblayers.conf
   in BBLAYERS variable.

3. Set MACHINE ?= "imx6qsabreauto" in COREBASE/build/conf/local.conf

4. Add INCOMPATIBLE_LICENSE = "GPLv3" in COREBASE/build/conf/local.conf file.

5. Set DISTRO ?= "fsl-ivi-vfb" in COREBASE/build/conf/local.conf file.

6. Add preferred u-boot version in COREBASE/build/conf/local.conf

	UBOOT_SUFFIX = "bin"
	UBOOT_PADDING = "2"
	PREFERRED_PROVIDER_u-boot = "u-boot-imx"

7. Accept End User License Agrement to use prebuilt GPU binaries
   add in COREBASE/build/conf/local.conf

	ACCEPT_FSL_EULA = "1"

7. Build genimi-image including GENIVI 5.0 (Gemini) P1 components and MXGAL backend

	bitbake gemini-image

Running MXGAL test applications
=====================================================

1. Deploy rootfs image into and sdcard

	sudo dd if=gemini-image-imx6qsabreauto.sdcard of=/dev/SDxx && sync && sync

2. Place SD on imx6sabreauto and poweron

3. Start LayerManager

	systemctl start layermanager.service

4. Run test application

	EGLVFBMockNavigation &
